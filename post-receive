#!/usr/bin/bash
#===============================================================================
# Git Hook - Post Receive
#===============================================================================
# This Bash script controls the actions of a webhook server. This particular
# hook takes action *after* receiving a push.  When you push to a central
# repository, this server can sit in the middle of the process, updating the
# GitHub repository, but also taking any other action possible on a Linux machine.

# In this case, we seek to:
# (1) Update the central, GitHub repo
# (2) Update a secondary, non-bare repo with "git pull"
# (3) Use the *.service files in the non-bare to re-deploy services in our CoreOS cluster.

echo ""
echo "==================================="
echo "Push Detected. Activating Githook."
echo "==================================="



echo ""
echo "-----------"
echo "Updating Central GitHub Repository."
echo "-----------"
/usr/bin/git push origin master

echo ""
echo "-----------"
echo "Updating Hook Repo."
echo "-----------"
cd ~/launch_repos/coreos-reflector/
# Unset the git directory environment variable so that what we may act upon this
# non-bare directory with git.  This either causes GIT_DIR to be reset or asks
# git to look for a .git file along our current $PWD.
unset GIT_DIR
/usr/bin/git pull origin master

echo ""
echo "-----------"
echo "Stopping Service: CoreOS Reflector Demo"
echo "-----------"
/usr/bin/fleetctl --tunnel coreos.pandastrike.com destroy reflector@02.service

sleep 5

echo ""
echo "-----------"
echo "Restarting Service: CoreOS Reflector Demo"
echo "-----------"
/usr/bin/fleetctl --tunnel coreos.pandastrike.com start reflector@02.service
/usr/bin/fleetctl --tunnel coreos.pandastrike.com journal -f reflector@02.service
